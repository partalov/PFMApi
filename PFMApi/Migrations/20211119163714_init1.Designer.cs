// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PFMApi.Database;

namespace PFMApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211119163714_init1")]
    partial class init1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("PFMApi.Database.Entity.CategoriesE.Categories", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("ParentCode")
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("PFMApi.Database.Entity.MccCodesE.MccCodes", b =>
                {
                    b.Property<int>("Coder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("MerchantType")
                        .HasColumnType("text");

                    b.HasKey("Coder");

                    b.ToTable("MccCodes");
                });

            modelBuilder.Entity("PFMApi.Database.Entity.SplitTransactionsE.SplitTransactions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CategoriesCode")
                        .HasColumnType("text");

                    b.Property<string>("TransactionId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoriesCode");

                    b.HasIndex("TransactionId");

                    b.ToTable("SplitTransactions");
                });

            modelBuilder.Entity("PFMApi.Database.Entity.TransactionsE.Transactions", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<string>("BeneficiaryName")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("CategoryCode")
                        .HasColumnType("text");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Direction")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Kind")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Mcc")
                        .HasColumnType("integer");

                    b.Property<int?>("MccCodeCoder")
                        .HasColumnType("integer");

                    b.Property<bool>("isSplited")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("MccCodeCoder");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("PFMApi.Database.Entity.SplitTransactionsE.SplitTransactions", b =>
                {
                    b.HasOne("PFMApi.Database.Entity.CategoriesE.Categories", "Categories")
                        .WithMany()
                        .HasForeignKey("CategoriesCode");

                    b.HasOne("PFMApi.Database.Entity.TransactionsE.Transactions", "Transactions")
                        .WithMany()
                        .HasForeignKey("TransactionId");

                    b.Navigation("Categories");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("PFMApi.Database.Entity.TransactionsE.Transactions", b =>
                {
                    b.HasOne("PFMApi.Database.Entity.MccCodesE.MccCodes", "MccCode")
                        .WithMany()
                        .HasForeignKey("MccCodeCoder");

                    b.Navigation("MccCode");
                });
#pragma warning restore 612, 618
        }
    }
}
